@model School_Library.Models.BookViewModel.EditBookViewModel

@{
    ViewData["Title"] = "Edit";

    var selectedAuthors = ViewData["SelectedAuthors"] as List<Author> ;
    

    //var selectBooks = ViewData["BookID"] as SelectList;

    //var selectAuthorBook = ViewData["AuthorID"] as SelectList;

}

<h1>Edit</h1>

<h4>Book</h4>
id
@*@selectBooks.Count()*@

@*@selectAuthorBook.Count()*@

@*@string.Join(", ", selectedAuthors.Select(x=> x.NameAuthor))*@
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CategoryID" class="control-label"></label>
                <select asp-for="CategoryID" class="form-control" asp-items="ViewBag.CategoryID"></select>
            </div>
            <div class="form-group">
                <label asp-for="NameBook" class="control-label"></label>
                <input asp-for="NameBook" class="form-control" />
                <span asp-validation-for="NameBook" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>AuthorID</th>
            <th>NameAuthor</th>
    </thead>
    <tbody>
        @foreach (var author in Model.Authors)
        {
            <tr class="">
               <td>
                    @Html.CheckBoxFor(model => author.IsChecked)
                    @Html.DisplayFor(modelItem => author.Id)
                    
               </td>
               <td>
                    @Html.DisplayFor(modelItem => author.NameAuthor)
               </td>
                
            </tr>
        }
    </tbody>
</table>
<div>
 <a asp-action="Index">Back to List</a>
</div>
   

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }