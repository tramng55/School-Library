@using School_Library.Common
@using School_Library.Models.BookViewModel
@model PaginatedList<School_Library.Models.Book>

@{
    ViewData["Title"] = "Index";

    var bookViewModel = (List<BookViewModel>)ViewData["BookViewModel"];
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>BookID</th>
            <th>NameBook</th>
            <th>Category</th>
            <th>Authors</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in bookViewModel)
        {
           
            <tr class="">
                <td>
                    @Html.DisplayFor(modelItem => item.BookID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NameBook)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Authors)
                </td>

                <td>
                  
                    <a asp-action="Edit" asp-route-id="@item.BookID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.BookID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.BookID">Delete</a> |
                </td>
            </tr>
        }
    </tbody>
</table>


